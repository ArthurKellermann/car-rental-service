generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_LOCAL")
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  created_at  DateTime @default(now())
  Car         Car[]

  @@map("categories")
}

model Specification {
  id                 String               @id @default(uuid())
  name               String               @unique
  description        String
  created_at         DateTime             @default(now())
  SpecificationsCars SpecificationsCars[]

  @@map("specifications")
}

model User {
  id             String   @id @default(uuid())
  name           String
  username       String   @unique
  password       String
  email          String   @unique
  driver_license String
  isAdmin        Boolean  @default(false)
  avatar         String?
  created_at     DateTime @default(now())

  @@map("users")
}

model Car {
  id                 String               @id @default(uuid())
  name               String
  description        String
  daily_rate         Float
  available          Boolean              @default(true)
  license_plate      String               @unique
  fine_amount        Float
  brand              String
  category_id        String?
  category           Category?            @relation(fields: [category_id], references: [id], onDelete: SetNull, onUpdate: SetNull)
  created_at         DateTime             @default(now())
  SpecificationsCars SpecificationsCars[]
  ImagesCars         ImagesCars[]

  @@map("cars")
}

model SpecificationsCars {
  id               String         @id @default(uuid())
  car_id           String?
  car              Car?           @relation(fields: [car_id], references: [id], onDelete: SetNull, onUpdate: SetNull)
  specification_id String?
  specification    Specification? @relation(fields: [specification_id], references: [id], onDelete: SetNull, onUpdate: SetNull)
  created_at       DateTime       @default(now())

  @@map("specifications_cars")
}

model ImagesCars {
  id         String   @id @default(uuid())
  car_id     String?
  car        Car?     @relation(fields: [car_id], references: [id], onDelete: SetNull, onUpdate: SetNull)
  image_name String
  created_at DateTime @default(now())

  @@map("cars_image")
}
